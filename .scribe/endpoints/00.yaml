name: Authentication
description: |-

  API for user authentication and authorization.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'User Registration'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: user@example.com
      password: secret
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "user@example.com",
               "created_at": "2021-03-01T00:00:00.000000Z",
               "updated_at": "2021-03-01T00:00:00.000000Z"
           },
           "token": "eyJ0eXAiOiJKV1QiLCJh..."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: secret
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "user@example.com",
               "email_verified_at": "2021-03-01T00:00:00.000000Z",
               "created_at": "2021-03-01T00:00:00.000000Z",
               "updated_at": "2021-03-01T00:00:00.000000Z"
           },
           "access_token": "eyJ0eXAiOiJKV1QiLCJh...",
           "token_type": "Bearer",
           "expires_at": "2021-03-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The new password of the user.'
        required: true
        example: newpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: newpassword
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Password reset successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/refresh-token
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh Token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      refresh_token:
        name: refresh_token
        description: 'The refresh token of the user.'
        required: true
        example: old_refresh_token
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      refresh_token: old_refresh_token
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "new_access_token",
           "access_token_expires_at": "2021-03-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Authenticated User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "John Doe",
           "email": "user@example.com",
           "email_verified_at": "2021-03-01T00:00:00.000000Z",
           "created_at": "2021-03-01T00:00:00.000000Z",
           "updated_at": "2021-03-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/update-role/{id}'
    metadata:
      groupName: Authentication
      groupDescription: |-

        API for user authentication and authorization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Role'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update role.'
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sapiente
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'The new role of the user.'
        required: true
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      role: admin
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User role updated successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
